////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.11.357.115208-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Albion_Direct
{
    /* Internal type: a8e */
    public partial class HarvestableObject : StaticObject
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
        
        private a8e _internal;
        
        #region Properties
        
        public a8e HarvestableObject_Internal => _internal;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        public ActionPoint GetActionPoint(Point2 A_0) => _internal.a0((aos)A_0);
        public HarvestableDescriptor GetDescriptor() => _internal.ti();
        public HarvestableChargeDescriptor GetChargeDescriptor() => _internal.tk();
        public long GetCharges() => _internal.tt();
        public long GetMaxCharges() => _internal.tu();
        public GameTimeStamp GetProtectedUntil() => _internal.tx();
        public int GetRareState() => _internal.ts();
        public ItemDescriptor GetResourceDescriptor() => _internal.ty();
        public HarvestableTierDescriptor GetTierDescriptor() => _internal.tj();
        public EquipmentItemProxy GetTool(LocalPlayerCharacter A_0, bool A_1) => _internal.a0((a21)A_0, (bool)A_1);
        public long GetYield() => _internal.tv();
        public bool IsHarvestable() => _internal.tw();
        
        #endregion
        
        #region Constructor
        
        public HarvestableObject(a8e instance) : base(instance)
        {
            _internal = instance;
        }
        
        static HarvestableObject()
        {
            
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator a8e(HarvestableObject instance)
        {
            return instance._internal;
        }
        
        public static implicit operator HarvestableObject(a8e instance)
        {
            return new HarvestableObject(instance);
        }
        
        public static implicit operator bool(HarvestableObject instance)
        {
            return instance._internal != null;
        }
        #endregion
    }
}
