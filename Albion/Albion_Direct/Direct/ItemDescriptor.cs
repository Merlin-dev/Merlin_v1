////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.11.357.115208-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Albion_Direct
{
    /* Internal type: cz */
    public partial class ItemDescriptor
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
        
        private cz _internal;
        
        #region Properties
        
        public cz ItemDescriptor_Internal => _internal;
        public string Description => _internal.ah;
        public string DescriptionTag
        {
            get => (string)_propertyReflectionPool[0].GetValue(_internal, null);
            set => _propertyReflectionPool[0].SetValue(_internal, (string)value, null);
        }
        public string Name => _internal.e;
        public string NameTag
        {
            get => (string)_propertyReflectionPool[1].GetValue(_internal, null);
            set => _propertyReflectionPool[1].SetValue(_internal, (string)value, null);
        }
        public string ResourceType => _internal.v;
        public int Tier => _internal.f;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        
        #endregion
        
        #region Constructor
        
        public ItemDescriptor(cz instance)
        {
            _internal = instance;
        }
        
        static ItemDescriptor()
        {
            _propertyReflectionPool.Add(typeof(cz).GetProperty("aq", BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance));
            _propertyReflectionPool.Add(typeof(cz).GetProperty("ap", BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance));
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator cz(ItemDescriptor instance)
        {
            return instance._internal;
        }
        
        public static implicit operator ItemDescriptor(cz instance)
        {
            return new ItemDescriptor(instance);
        }
        
        public static implicit operator bool(ItemDescriptor instance)
        {
            return instance._internal != null;
        }
        #endregion
    }
}
