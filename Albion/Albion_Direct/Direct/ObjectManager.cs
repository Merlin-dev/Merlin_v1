////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.0.336.100246-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

namespace Albion_Direct
{
    /* Internal type: aoh */
    public partial class ObjectManager
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
        
        private aoh _internal;
        
        #region Properties
        
        public aoh ObjectManager_Internal => _internal;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        public ItemProxy CreateItemProxy(ItemObject A_0) => _internal.a((au2)A_0);
        public CollisionManager GetCollisionManager() => _internal.y();
        public ClusterDescriptor GetCurrentCluster() => _internal.w();
        public static ObjectManager GetInstance() => aoh.a();
        public ItemProxy GetItemProxy(long A_0) => _internal.v((long)A_0);
        public LocalPlayerCharacter GetLocalPlayerCharacter() => _internal.ac();
        public SimulationObject GetObject(long A_0) => _internal.a((long)A_0);
        public Dictionary<long, au1> GetObjectMap() => (Dictionary<long, au1>)_methodReflectionPool[0].Invoke(_internal,new object[]{});
        public IEnumerable GetObjects() => _internal.ab();
        public ICollection<SimulationObject> GetObjects<a>() where a: au1 => (ICollection<SimulationObject>)_internal.ao<a>();
        public PlayerCharacter GetPlayerCharacter(Guid A_0) => _internal.a((Guid)A_0);
        
        #endregion
        
        #region Constructor
        
        public ObjectManager(aoh instance)
        {
            _internal = instance;
        }
        
        static ObjectManager()
        {
            _methodReflectionPool.Add(typeof(aoh).GetMethod("am", BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance, null, new Type[]{}, null));
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator aoh(ObjectManager instance)
        {
            return instance._internal;
        }
        
        public static implicit operator ObjectManager(aoh instance)
        {
            return new ObjectManager(instance);
        }
        
        public static implicit operator bool(ObjectManager instance)
        {
            return instance._internal != null;
        }
        #endregion
    }
}
