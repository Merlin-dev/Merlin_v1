////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.0.336.100246-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Reflection;

namespace Albion_Direct
{
    /* Internal type: WorldMap.Worldmap */
    public partial class Worldmap
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
        
        private WorldMap.Worldmap _internal;
        
        #region Properties
        
        public WorldMap.Worldmap Worldmap_Internal => _internal;
        
        #endregion
        
        #region Fields
        
        public Dictionary<string, WorldMap.WorldmapCluster> WorldmapClusters
        {
            get => (Dictionary<string, WorldMap.WorldmapCluster>)_fieldReflectionPool[0].GetValue(_internal);
            set => _fieldReflectionPool[0].SetValue(_internal, (Dictionary<string, WorldMap.WorldmapCluster>)value);
        }
        
        #endregion
        
        #region Methods
        
        
        #endregion
        
        #region Constructor
        
        public Worldmap(WorldMap.Worldmap instance)
        {
            _internal = instance;
        }
        
        static Worldmap()
        {
            _fieldReflectionPool.Add(typeof(WorldMap.Worldmap).GetField("c", BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance));
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator WorldMap.Worldmap(Worldmap instance)
        {
            return instance._internal;
        }
        
        public static implicit operator Worldmap(WorldMap.Worldmap instance)
        {
            return new Worldmap(instance);
        }
        
        public static implicit operator bool(Worldmap instance)
        {
            return instance._internal != null;
        }
        #endregion
    }
}
